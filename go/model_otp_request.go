/*
API for AuthApplication

Bran's Auth API

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package authclient

import (
	"encoding/json"
)

// checks if the OtpRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OtpRequest{}

// OtpRequest struct for OtpRequest
type OtpRequest struct {
	EmailOrUsername *string `json:"emailOrUsername,omitempty"`
	Message *string `json:"message,omitempty"`
}

// NewOtpRequest instantiates a new OtpRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOtpRequest() *OtpRequest {
	this := OtpRequest{}
	return &this
}

// NewOtpRequestWithDefaults instantiates a new OtpRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOtpRequestWithDefaults() *OtpRequest {
	this := OtpRequest{}
	return &this
}

// GetEmailOrUsername returns the EmailOrUsername field value if set, zero value otherwise.
func (o *OtpRequest) GetEmailOrUsername() string {
	if o == nil || IsNil(o.EmailOrUsername) {
		var ret string
		return ret
	}
	return *o.EmailOrUsername
}

// GetEmailOrUsernameOk returns a tuple with the EmailOrUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OtpRequest) GetEmailOrUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.EmailOrUsername) {
		return nil, false
	}
	return o.EmailOrUsername, true
}

// HasEmailOrUsername returns a boolean if a field has been set.
func (o *OtpRequest) HasEmailOrUsername() bool {
	if o != nil && !IsNil(o.EmailOrUsername) {
		return true
	}

	return false
}

// SetEmailOrUsername gets a reference to the given string and assigns it to the EmailOrUsername field.
func (o *OtpRequest) SetEmailOrUsername(v string) {
	o.EmailOrUsername = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *OtpRequest) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OtpRequest) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *OtpRequest) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *OtpRequest) SetMessage(v string) {
	o.Message = &v
}

func (o OtpRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OtpRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EmailOrUsername) {
		toSerialize["emailOrUsername"] = o.EmailOrUsername
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	return toSerialize, nil
}

type NullableOtpRequest struct {
	value *OtpRequest
	isSet bool
}

func (v NullableOtpRequest) Get() *OtpRequest {
	return v.value
}

func (v *NullableOtpRequest) Set(val *OtpRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableOtpRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableOtpRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOtpRequest(val *OtpRequest) *NullableOtpRequest {
	return &NullableOtpRequest{value: val, isSet: true}
}

func (v NullableOtpRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOtpRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


