/*
 * API for AuthApplication
 *
 * Bran's Auth API
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct ResponseUserDetails {
    #[serde(rename = "userId", skip_serializing_if = "Option::is_none")]
    pub user_id: Option<String>,
    #[serde(rename = "username", skip_serializing_if = "Option::is_none")]
    pub username: Option<String>,
    #[serde(rename = "displayName", skip_serializing_if = "Option::is_none")]
    pub display_name: Option<String>,
    #[serde(rename = "email", skip_serializing_if = "Option::is_none")]
    pub email: Option<String>,
    #[serde(rename = "roles", skip_serializing_if = "Option::is_none")]
    pub roles: Option<Vec<crate::models::Role>>,
    #[serde(rename = "emailVerified", skip_serializing_if = "Option::is_none")]
    pub email_verified: Option<bool>,
    #[serde(rename = "lockedAccount", skip_serializing_if = "Option::is_none")]
    pub locked_account: Option<bool>,
    #[serde(rename = "deletedAccount", skip_serializing_if = "Option::is_none")]
    pub deleted_account: Option<bool>,
}

impl ResponseUserDetails {
    pub fn new() -> ResponseUserDetails {
        ResponseUserDetails {
            user_id: None,
            username: None,
            display_name: None,
            email: None,
            roles: None,
            email_verified: None,
            locked_account: None,
            deleted_account: None,
        }
    }
}


