/*
API for AuthApplication

Bran's Auth API

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package authclient

import (
	"encoding/json"
)

// checks if the SigninResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SigninResponse{}

// SigninResponse struct for SigninResponse
type SigninResponse struct {
	Errored *bool `json:"errored,omitempty"`
	Messages []string `json:"messages,omitempty"`
	Token *string `json:"token,omitempty"`
	RefreshToken *string `json:"refreshToken,omitempty"`
	Username *string `json:"username,omitempty"`
	DisplayName *string `json:"displayName,omitempty"`
	Email *string `json:"email,omitempty"`
	Roles []Role `json:"roles,omitempty"`
	EmailVerified *bool `json:"emailVerified,omitempty"`
	LockedAccount *bool `json:"lockedAccount,omitempty"`
	DeletedAccount *bool `json:"deletedAccount,omitempty"`
}

// NewSigninResponse instantiates a new SigninResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSigninResponse() *SigninResponse {
	this := SigninResponse{}
	return &this
}

// NewSigninResponseWithDefaults instantiates a new SigninResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSigninResponseWithDefaults() *SigninResponse {
	this := SigninResponse{}
	return &this
}

// GetErrored returns the Errored field value if set, zero value otherwise.
func (o *SigninResponse) GetErrored() bool {
	if o == nil || IsNil(o.Errored) {
		var ret bool
		return ret
	}
	return *o.Errored
}

// GetErroredOk returns a tuple with the Errored field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SigninResponse) GetErroredOk() (*bool, bool) {
	if o == nil || IsNil(o.Errored) {
		return nil, false
	}
	return o.Errored, true
}

// HasErrored returns a boolean if a field has been set.
func (o *SigninResponse) HasErrored() bool {
	if o != nil && !IsNil(o.Errored) {
		return true
	}

	return false
}

// SetErrored gets a reference to the given bool and assigns it to the Errored field.
func (o *SigninResponse) SetErrored(v bool) {
	o.Errored = &v
}

// GetMessages returns the Messages field value if set, zero value otherwise.
func (o *SigninResponse) GetMessages() []string {
	if o == nil || IsNil(o.Messages) {
		var ret []string
		return ret
	}
	return o.Messages
}

// GetMessagesOk returns a tuple with the Messages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SigninResponse) GetMessagesOk() ([]string, bool) {
	if o == nil || IsNil(o.Messages) {
		return nil, false
	}
	return o.Messages, true
}

// HasMessages returns a boolean if a field has been set.
func (o *SigninResponse) HasMessages() bool {
	if o != nil && !IsNil(o.Messages) {
		return true
	}

	return false
}

// SetMessages gets a reference to the given []string and assigns it to the Messages field.
func (o *SigninResponse) SetMessages(v []string) {
	o.Messages = v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *SigninResponse) GetToken() string {
	if o == nil || IsNil(o.Token) {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SigninResponse) GetTokenOk() (*string, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *SigninResponse) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *SigninResponse) SetToken(v string) {
	o.Token = &v
}

// GetRefreshToken returns the RefreshToken field value if set, zero value otherwise.
func (o *SigninResponse) GetRefreshToken() string {
	if o == nil || IsNil(o.RefreshToken) {
		var ret string
		return ret
	}
	return *o.RefreshToken
}

// GetRefreshTokenOk returns a tuple with the RefreshToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SigninResponse) GetRefreshTokenOk() (*string, bool) {
	if o == nil || IsNil(o.RefreshToken) {
		return nil, false
	}
	return o.RefreshToken, true
}

// HasRefreshToken returns a boolean if a field has been set.
func (o *SigninResponse) HasRefreshToken() bool {
	if o != nil && !IsNil(o.RefreshToken) {
		return true
	}

	return false
}

// SetRefreshToken gets a reference to the given string and assigns it to the RefreshToken field.
func (o *SigninResponse) SetRefreshToken(v string) {
	o.RefreshToken = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *SigninResponse) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SigninResponse) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *SigninResponse) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *SigninResponse) SetUsername(v string) {
	o.Username = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *SigninResponse) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SigninResponse) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *SigninResponse) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *SigninResponse) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *SigninResponse) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SigninResponse) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *SigninResponse) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *SigninResponse) SetEmail(v string) {
	o.Email = &v
}

// GetRoles returns the Roles field value if set, zero value otherwise.
func (o *SigninResponse) GetRoles() []Role {
	if o == nil || IsNil(o.Roles) {
		var ret []Role
		return ret
	}
	return o.Roles
}

// GetRolesOk returns a tuple with the Roles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SigninResponse) GetRolesOk() ([]Role, bool) {
	if o == nil || IsNil(o.Roles) {
		return nil, false
	}
	return o.Roles, true
}

// HasRoles returns a boolean if a field has been set.
func (o *SigninResponse) HasRoles() bool {
	if o != nil && !IsNil(o.Roles) {
		return true
	}

	return false
}

// SetRoles gets a reference to the given []Role and assigns it to the Roles field.
func (o *SigninResponse) SetRoles(v []Role) {
	o.Roles = v
}

// GetEmailVerified returns the EmailVerified field value if set, zero value otherwise.
func (o *SigninResponse) GetEmailVerified() bool {
	if o == nil || IsNil(o.EmailVerified) {
		var ret bool
		return ret
	}
	return *o.EmailVerified
}

// GetEmailVerifiedOk returns a tuple with the EmailVerified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SigninResponse) GetEmailVerifiedOk() (*bool, bool) {
	if o == nil || IsNil(o.EmailVerified) {
		return nil, false
	}
	return o.EmailVerified, true
}

// HasEmailVerified returns a boolean if a field has been set.
func (o *SigninResponse) HasEmailVerified() bool {
	if o != nil && !IsNil(o.EmailVerified) {
		return true
	}

	return false
}

// SetEmailVerified gets a reference to the given bool and assigns it to the EmailVerified field.
func (o *SigninResponse) SetEmailVerified(v bool) {
	o.EmailVerified = &v
}

// GetLockedAccount returns the LockedAccount field value if set, zero value otherwise.
func (o *SigninResponse) GetLockedAccount() bool {
	if o == nil || IsNil(o.LockedAccount) {
		var ret bool
		return ret
	}
	return *o.LockedAccount
}

// GetLockedAccountOk returns a tuple with the LockedAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SigninResponse) GetLockedAccountOk() (*bool, bool) {
	if o == nil || IsNil(o.LockedAccount) {
		return nil, false
	}
	return o.LockedAccount, true
}

// HasLockedAccount returns a boolean if a field has been set.
func (o *SigninResponse) HasLockedAccount() bool {
	if o != nil && !IsNil(o.LockedAccount) {
		return true
	}

	return false
}

// SetLockedAccount gets a reference to the given bool and assigns it to the LockedAccount field.
func (o *SigninResponse) SetLockedAccount(v bool) {
	o.LockedAccount = &v
}

// GetDeletedAccount returns the DeletedAccount field value if set, zero value otherwise.
func (o *SigninResponse) GetDeletedAccount() bool {
	if o == nil || IsNil(o.DeletedAccount) {
		var ret bool
		return ret
	}
	return *o.DeletedAccount
}

// GetDeletedAccountOk returns a tuple with the DeletedAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SigninResponse) GetDeletedAccountOk() (*bool, bool) {
	if o == nil || IsNil(o.DeletedAccount) {
		return nil, false
	}
	return o.DeletedAccount, true
}

// HasDeletedAccount returns a boolean if a field has been set.
func (o *SigninResponse) HasDeletedAccount() bool {
	if o != nil && !IsNil(o.DeletedAccount) {
		return true
	}

	return false
}

// SetDeletedAccount gets a reference to the given bool and assigns it to the DeletedAccount field.
func (o *SigninResponse) SetDeletedAccount(v bool) {
	o.DeletedAccount = &v
}

func (o SigninResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SigninResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Errored) {
		toSerialize["errored"] = o.Errored
	}
	if !IsNil(o.Messages) {
		toSerialize["messages"] = o.Messages
	}
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	if !IsNil(o.RefreshToken) {
		toSerialize["refreshToken"] = o.RefreshToken
	}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.Roles) {
		toSerialize["roles"] = o.Roles
	}
	if !IsNil(o.EmailVerified) {
		toSerialize["emailVerified"] = o.EmailVerified
	}
	if !IsNil(o.LockedAccount) {
		toSerialize["lockedAccount"] = o.LockedAccount
	}
	if !IsNil(o.DeletedAccount) {
		toSerialize["deletedAccount"] = o.DeletedAccount
	}
	return toSerialize, nil
}

type NullableSigninResponse struct {
	value *SigninResponse
	isSet bool
}

func (v NullableSigninResponse) Get() *SigninResponse {
	return v.value
}

func (v *NullableSigninResponse) Set(val *SigninResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSigninResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSigninResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSigninResponse(val *SigninResponse) *NullableSigninResponse {
	return &NullableSigninResponse{value: val, isSet: true}
}

func (v NullableSigninResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSigninResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


