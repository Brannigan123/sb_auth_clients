/*
API for AuthApplication

Bran's Auth API

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package authclient

import (
	"encoding/json"
)

// checks if the UserDetailsUpdateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserDetailsUpdateRequest{}

// UserDetailsUpdateRequest struct for UserDetailsUpdateRequest
type UserDetailsUpdateRequest struct {
	OtpId *string `json:"otpId,omitempty"`
	OtpCode *string `json:"otpCode,omitempty"`
	DisplayName *string `json:"displayName,omitempty"`
	Email *string `json:"email,omitempty"`
	Password *string `json:"password,omitempty"`
}

// NewUserDetailsUpdateRequest instantiates a new UserDetailsUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserDetailsUpdateRequest() *UserDetailsUpdateRequest {
	this := UserDetailsUpdateRequest{}
	return &this
}

// NewUserDetailsUpdateRequestWithDefaults instantiates a new UserDetailsUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserDetailsUpdateRequestWithDefaults() *UserDetailsUpdateRequest {
	this := UserDetailsUpdateRequest{}
	return &this
}

// GetOtpId returns the OtpId field value if set, zero value otherwise.
func (o *UserDetailsUpdateRequest) GetOtpId() string {
	if o == nil || IsNil(o.OtpId) {
		var ret string
		return ret
	}
	return *o.OtpId
}

// GetOtpIdOk returns a tuple with the OtpId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserDetailsUpdateRequest) GetOtpIdOk() (*string, bool) {
	if o == nil || IsNil(o.OtpId) {
		return nil, false
	}
	return o.OtpId, true
}

// HasOtpId returns a boolean if a field has been set.
func (o *UserDetailsUpdateRequest) HasOtpId() bool {
	if o != nil && !IsNil(o.OtpId) {
		return true
	}

	return false
}

// SetOtpId gets a reference to the given string and assigns it to the OtpId field.
func (o *UserDetailsUpdateRequest) SetOtpId(v string) {
	o.OtpId = &v
}

// GetOtpCode returns the OtpCode field value if set, zero value otherwise.
func (o *UserDetailsUpdateRequest) GetOtpCode() string {
	if o == nil || IsNil(o.OtpCode) {
		var ret string
		return ret
	}
	return *o.OtpCode
}

// GetOtpCodeOk returns a tuple with the OtpCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserDetailsUpdateRequest) GetOtpCodeOk() (*string, bool) {
	if o == nil || IsNil(o.OtpCode) {
		return nil, false
	}
	return o.OtpCode, true
}

// HasOtpCode returns a boolean if a field has been set.
func (o *UserDetailsUpdateRequest) HasOtpCode() bool {
	if o != nil && !IsNil(o.OtpCode) {
		return true
	}

	return false
}

// SetOtpCode gets a reference to the given string and assigns it to the OtpCode field.
func (o *UserDetailsUpdateRequest) SetOtpCode(v string) {
	o.OtpCode = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *UserDetailsUpdateRequest) GetDisplayName() string {
	if o == nil || IsNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserDetailsUpdateRequest) GetDisplayNameOk() (*string, bool) {
	if o == nil || IsNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *UserDetailsUpdateRequest) HasDisplayName() bool {
	if o != nil && !IsNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *UserDetailsUpdateRequest) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *UserDetailsUpdateRequest) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserDetailsUpdateRequest) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *UserDetailsUpdateRequest) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *UserDetailsUpdateRequest) SetEmail(v string) {
	o.Email = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *UserDetailsUpdateRequest) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserDetailsUpdateRequest) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *UserDetailsUpdateRequest) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *UserDetailsUpdateRequest) SetPassword(v string) {
	o.Password = &v
}

func (o UserDetailsUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserDetailsUpdateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OtpId) {
		toSerialize["otpId"] = o.OtpId
	}
	if !IsNil(o.OtpCode) {
		toSerialize["otpCode"] = o.OtpCode
	}
	if !IsNil(o.DisplayName) {
		toSerialize["displayName"] = o.DisplayName
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	return toSerialize, nil
}

type NullableUserDetailsUpdateRequest struct {
	value *UserDetailsUpdateRequest
	isSet bool
}

func (v NullableUserDetailsUpdateRequest) Get() *UserDetailsUpdateRequest {
	return v.value
}

func (v *NullableUserDetailsUpdateRequest) Set(val *UserDetailsUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUserDetailsUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUserDetailsUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserDetailsUpdateRequest(val *UserDetailsUpdateRequest) *NullableUserDetailsUpdateRequest {
	return &NullableUserDetailsUpdateRequest{value: val, isSet: true}
}

func (v NullableUserDetailsUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserDetailsUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


