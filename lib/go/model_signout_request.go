/*
API for AuthApplication

Bran's Auth API

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package authclient

import (
	"encoding/json"
)

// checks if the SignoutRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SignoutRequest{}

// SignoutRequest struct for SignoutRequest
type SignoutRequest struct {
	Token *string `json:"token,omitempty"`
}

// NewSignoutRequest instantiates a new SignoutRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSignoutRequest() *SignoutRequest {
	this := SignoutRequest{}
	return &this
}

// NewSignoutRequestWithDefaults instantiates a new SignoutRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSignoutRequestWithDefaults() *SignoutRequest {
	this := SignoutRequest{}
	return &this
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *SignoutRequest) GetToken() string {
	if o == nil || IsNil(o.Token) {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SignoutRequest) GetTokenOk() (*string, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *SignoutRequest) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *SignoutRequest) SetToken(v string) {
	o.Token = &v
}

func (o SignoutRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SignoutRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	return toSerialize, nil
}

type NullableSignoutRequest struct {
	value *SignoutRequest
	isSet bool
}

func (v NullableSignoutRequest) Get() *SignoutRequest {
	return v.value
}

func (v *NullableSignoutRequest) Set(val *SignoutRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSignoutRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSignoutRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSignoutRequest(val *SignoutRequest) *NullableSignoutRequest {
	return &NullableSignoutRequest{value: val, isSet: true}
}

func (v NullableSignoutRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSignoutRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


